plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group   = project.name
version = project.version

compileJava.options.encoding = 'UTF-8'

java { toolchain {
    languageVersion = JavaLanguageVersion.of(8)
}}

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url 'https://mvnrepository.com/artifact/org.springframework/spring-expression'}
}

dependencies {
    testCompileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.springframework:spring-expression:5.3.33'
    implementation fileTree(dir: 'Libs', include: ['*.jar'])

    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.22.0'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.22.0'
    compileOnly 'me.clip:placeholderapi:2.11.4'
}

tasks.register('replaceTokens', Copy) {
    from 'src/main/java'
    into 'build/processed-sources/java'
    include '**/*.java'
    filter { String line -> line
        .replace('${name}', project.name)
        .replace('${description}', project.description)
        .replace('${cht_version}', project.cht_version as String)
        .replace('${cot_version}', project.cot_version as String)
        .replace('${dst_version}', project.dst_version as String)
        .replace('${author}', project.author as String)
    }
}

compileJava {
    dependsOn replaceTokens
    source = 'build/processed-sources/java'
}

processResources {
    filesMatching('plugin.yml') {
        expand name: project.name,
               description: project.description,
               cht_version: project.cht_version,
               cot_version: project.cot_version,
               dst_version: project.dst_version,
               author: project.author
    }
}

shadowJar {
    archiveFileName = "${project.name} - ${project.version}.jar"
}